{#
/**
 * @file
 * Default theme implementation for an item list.
 *
 * Available variables:
 * - items: A list of items. Each item contains:
 *   - attributes: HTML attributes to be applied to each list item.
 *   - value: The content of the list element.
 * - title: The title of the list.
 * - list_type: The tag for list element ("ul" or "ol").
 * - wrapper_attributes: HTML attributes to be applied to the list wrapper.
 * - attributes: HTML attributes to be applied to the list.
 * - empty: A message to display when there are no items. Allowed value is a
 *   string or render array.
 * - context: A list of contextual data associated with the list. May contain:
 *   - list_style: The custom list style.
 *
 * @see template_preprocess_item_list()
 *
 * @ingroup themeable
 */
#}
{% import _self as views_tree %}

{{ views_tree.tree(items.leaves, attributes, list_type, 0) }}

{% macro tree(items, attributes, list_type, child) %}
  {% import _self as views_tree %}
  {% if context.list_style %}
    {%- set attributes = attributes.addClass('item-list__' ~ context.list_style) %}
  {% endif %}
  {% if items or empty %}
    {%- if title is not empty -%}
        <h3>{{ title }}</h3>
    {%- endif -%}

    {%- if items -%}
      {% set prefix = random(10000) %}
      {%- if child -%}
        <a data-toggle="collapse" href="#collapse--{{ prefix }}" role="button" aria-expanded="false" aria-controls="collapseExample">
          <i style="font-size: 15px;" class="material-icons">import_export</i>
        </a>
        <{{ list_type }}{{ attributes.setAttribute('id', 'collapse--' ~ prefix).addClass('collapse') }}>
      {%- else -%}
        <{{ list_type }}{{ attributes }}>
      {%- endif -%}
        {%- for item in items -%}
          <li{{ item.attributes }}>{{ item.node }} {{ views_tree.tree(item.leaves, attributes, list_type, 1) }}</li>
        {%- endfor -%}
      </{{ list_type }}>
    {%- else -%}
        {{- empty -}}
    {%- endif -%}
  {%- endif %}
{% endmacro %}
