version: '3'
services:
  mysql:
    image: mysql:5.7
    ports:
      - 13306:3306
    environment:
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
      MYSQL_ROOT_PASSWORD: root

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      COLUMNS: 80 # Set 80 columns for docker exec -it.
      ## Read instructions at https://wodby.com/stacks/drupal/docs/local/xdebug/
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: 1
      PHP_IDE_CONFIG: serverName=docker
      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ & Linux/Mac/Win
      #PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux, Docker < 18.03
      #PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS, Docker < 18.03
      #PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows, Docker < 18.03
    volumes:
      - ./:/var/www/html

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - php
    environment:
      #      NGINX_PAGESPEED: "on"
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/web
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
    #      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      - ./:/var/www/html
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:${PROJECT_BASE_URL}'

    #  varnish:
    #    image: wodby/varnish:$VARNISH_TAG
    #    container_name: "${PROJECT_NAME}_varnish"
    #    depends_on:
    #      - nginx
    #    environment:
    #      VARNISH_SECRET: secret
    #      VARNISH_BACKEND_HOST: nginx
    #      VARNISH_BACKEND_PORT: 80
    #      VARNISH_CONFIG_PRESET: drupal
    #      VARNISH_PURGE_EXTERNAL_REQUEST_HEADER: X-Real-IP
    #    labels:
    #      - 'traefik.backend=varnish'
    #      - 'traefik.port=6081'
    #      - 'traefik.frontend.rule=Host:varnish.${PROJECT_BASE_URL}'

  #  redis:
  #    container_name: "${PROJECT_NAME}_redis"
  #    image: wodby/redis:$REDIS_TAG

  #  solr:
  #    image: wodby/solr:$SOLR_TAG
  #    container_name: "${PROJECT_NAME}_solr"
  #    environment:
  #      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
  #      SOLR_HEAP: 1024m
  #    labels:
  #      - 'traefik.backend=solr'
  #      - 'traefik.port=8983'
  #      - 'traefik.frontend.rule=Host:solr.${PROJECT_BASE_URL}'

  node:
    image: wodby/node:$NODE_TAG
    container_name: "${PROJECT_NAME}_node"
    working_dir: /var/www/html
    labels:
      - 'traefik.backend=node'
      - 'traefik.port=3000'
      - 'traefik.frontend.rule=Host:front.${PROJECT_BASE_URL}'
    expose:
      - "3000"
    volumes:
      - ./:/var/www/html
    command: sh -c 'yarn install && yarn run start'

  #  mailhog:
  #    image: mailhog/mailhog
  #    container_name: "${PROJECT_NAME}_mailhog"
  #    labels:
  #      - 'traefik.backend=mailhog'
  #      - 'traefik.port=8025'
  #      - 'traefik.frontend.rule=Host:mailhog.${PROJECT_BASE_URL}'

  #  webgrind:
  #    image: wodby/webgrind:$WEBGRIND_TAG
  #    container_name: "${PROJECT_NAME}_webgrind"
  #    environment:
  #      WEBGRIND_PROFILER_DIR: /mnt/files/xdebug/profiler
  #    labels:
  #      - 'traefik.backend=webgrind'
  #      - 'traefik.port=8080'
  #      - 'traefik.frontend.rule=Host:webgrind.${PROJECT_BASE_URL}'
  #    volumes:
  #      - files:/mnt/files

  #  rsyslog:
  #    container_name: "${PROJECT_NAME}_rsyslog"
  #    image: wodby/rsyslog:$RSYSLOG_TAG

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.${PROJECT_BASE_URL}'

  traefik:
    image: traefik
    container_name: "${PROJECT_NAME}_traefik"
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '8001:80'
    #      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

