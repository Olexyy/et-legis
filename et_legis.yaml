apiVersion: apps/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: et_legis
    app: et_legis
  name: et_legis
spec:
  #  replicas: 1
  #  strategy:
  #    type: Recreate
  selector:
    matchLabels:
      app: et_legis
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: et_legis
        app: et_legis
        tier: web
    spec:
      containers:
        - image: 'gcr.io/stamkort-tm/core'
          name: et_legis
          # This setting makes nodes pull the docker image every time before
          # starting the pod. This is useful when debugging, but should be turned
          # off in production.
          imagePullPolicy: Always
          env:
            - name: PHP_FPM_CLEAR_ENV
              value: "false"
            - name: DB_DRIVER
              value: mysql
            - name: DB_HOST
              value: 127.0.0.1
            - name: DB_NAME
              value: et_legis
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
          resources: {}

        # [END cloudsql_secrets]
        # Change <INSTANCE_CONNECTION_NAME> here to include your GCP
        # project, the region of your Cloud SQL instance and the name
        # of your Cloud SQL instance. The format is
        # $PROJECT:$REGION:$INSTANCE
        # [START proxy_container]
        - image: gcr.io/cloudsql-docker/gce-proxy:1.11
          name: cloudsql-proxy
          command: ["/cloud_sql_proxy",
                    "-instances=stamkort-tm:europe-west1:stamkort=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          # [START cloudsql_security_context]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          # [END cloudsql_security_context]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
          # [END proxy_container]
        - image: 'wodby/nginx:1.15'
          name: et_legis-nginx
          ports:
            - containerPort: 80
          env:
            - name: PHP_FPM_CLEAR_ENV
              value: "false"
            - name: NGINX_BACKEND_HOST
              value: localhost
            - name: NGINX_ERROR_LOG_LEVEL
              value: debug
            - name: NGINX_SERVER_ROOT
              value: /var/www/html/web
            - name: NGINX_STATIC_OPEN_FILE_CACHE
              value: "off"
            - name: NGINX_VHOST_PRESET
              value: drupal8
            - name: DB_DRIVER
              value: mysql
            - name: DB_HOST
              value: 127.0.0.1
            - name: DB_NAME
              value: stamkort
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
          resources: {}

      restartPolicy: Always
      volumes:
        # [START volumes cloudsql]
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        # [END volumes cloudsql]
status: {}
